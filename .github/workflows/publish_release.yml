# SPDX-FileCopyrightText: 2022 Nextcloud contributors
# SPDX-License-Identifier: AGPL-3.0-or-later
name: Draft Release

on: 
  push:
    tags:
      - v*
      - '!v*-*'

jobs:
  checkout:
    runs-on: ubuntu-latest
    name: Release
    steps:
    - uses: actions/checkout@v4
    - name: Check correct app version
      id: appinfo
      uses: ./.github/actions/get-polls-version

    - name: Setup node
      if: success()
      uses: ./.github/actions/setup-node

    - name: Setup composer and PHP
      if: success()
      uses: ./.github/actions/setup-composer
      with:
        mode: production
        php-tools: composer

    - name: build
      run: npm run build --if-present

    - name: Make appstore package ${{ steps.appinfo.outputs.app-version }}
      if: success()
      run: make package

    - name: rename packages to polls-${{ steps.appinfo.outputs.app-version }}
      if: success()
      run: mv build/artifacts/appstore/polls.tar.gz build/artifacts/appstore/polls-${{ steps.appinfo.outputs.app-version }}.tar.gz

    - name: create zip archive from sources
      if: success()
      run: |
        pushd build/source
        zip -r ../artifacts/appstore/polls-${{ steps.appinfo.outputs.app-version }}.zip *
        popd

    - name: Extract release notes
      if: success()
      id: extract-release-notes
      uses: ffurrer2/extract-release-notes@v1

    - name: Draft Release
      if: success()
      uses: softprops/action-gh-release@v1
      with: 
        body: "# Changelog ${{ steps.appinfo.outputs.app-version }} \n ${{ steps.extract-release-notes.outputs.release_notes }} "
        prerelease: false
        draft: false
        generate_release_notes: true
        files: |
          build/artifacts/appstore/polls-${{ steps.appinfo.outputs.app-version }}.tar.gz
          build/artifacts/appstore/polls-${{ steps.appinfo.outputs.app-version }}.zip

    - name: Create release notification issue
      if: success()
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASENOTES: ${{ steps.extract-release-notes.outputs.release_notes }}
        VERSION: ${{ steps.appinfo.outputs.app-version }}
        TAG: ${{ steps.appinfo.outputs.tag-version }}
      with:
        filename: .github/RELEASE_NOTIFICATION.md
