name: Publish pre-release

on: 
  push:
    tags:
      - v*-beta*
      - v*-rc*
      - v*-RC*

permissions:
  contents: read
  issues: write 

jobs:
  checkout:
    runs-on: ubuntu-latest
    name: Beta release
    steps:
    - name: Checkout app
      uses: actions/checkout@v2

    - name: Get app info and validate app version against tag name
      id: appinfo
      uses: ./.github/actions/get-polls-version

    - name: Setup node
      if: success()
      uses: ./.github/actions/setup-node

    - name: Setup composer and PHP
      if: success()
      uses: ./.github/actions/setup-composer
      with:
        mode: production
        php-tools: composer

    - name: build
      run: npm run build --if-present

    - name: Make appstore package
      if: success()
      run: make package

    - name: rename package
      if: success()
      run: mv build/artifacts/appstore/polls.tar.gz build/artifacts/appstore/${{ steps.appinfo.outputs.app-id }}-${{ steps.appinfo.outputs.app-version }}.tar.gz

    - name: create zip archive from sources
      if: success()
      run: |
        pushd build/source
        zip -r ../artifacts/appstore/${{ steps.appinfo.outputs.app-id }}-${{ steps.appinfo.outputs.app-version }}.zip *
        popd

    - name: Publish pre-release
      if: success()
      uses: softprops/action-gh-release@v1
      with: 
        prerelease: true
        draft: false
        generate_release_notes: true
        files: |
          build/artifacts/appstore/${{ steps.appinfo.outputs.app-id }}-${{ steps.appinfo.outputs.app-version }}.tar.gz
          build/artifacts/appstore/${{ steps.appinfo.outputs.app-id }}-${{ steps.appinfo.outputs.app-version }}.zip

    - name: Create notification
      if: success()
      uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APP_ID: ${{ steps.appinfo.outputs.app-id }}
          APP_NAME: ${{ steps.appinfo.outputs.app-name }}
          APP_VERSION: ${{ steps.appinfo.outputs.app-version }}
          TAG_VERSION: ${{ steps.appinfo.outputs.tag-version }}
          NC_MIN_VERSION: ${{ steps.appinfo.outputs.nc-min-version }}
          NC_MAX_VERSION: ${{ steps.appinfo.outputs.nc-max-version }}
          PHP_MIN_VERSION: ${{ steps.appinfo.outputs.php-min-version }}
        with:
          filename: .github/NEW_VERSION.md